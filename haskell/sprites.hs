module Sprites (getHealthBarSprite, getCharacterSprite, getCardSprite, getCharSprite) where

getHealthBarSprite:: Int -> String
-- getHealthBarSprite life = unlines [
--   "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█▀▀█░░█▀▀█░░█▀▀█░░",
--   "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█▄▄█░░█▄▄█░░█▄▄█░░",
--   "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▄▄▄█░░▄▄▄█░░▄▄▄█░░",
--   "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░",



--   "░░████████████████████████████████████████████████████████░░",
--   "██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░██",
--   "░░████████████████████████████████████████████████████████░░"
--   ]

-- getHealthBarSprite life = do
--   let lifeNumberSprite = makeTextLines ("#####" ++ show life) "#"
--   return (unlines lifeNumberSprite)

getHealthBarSprite life = unlines (makeTextLines ("#####" ++ show life ++ "##") "░░")

-- regra de 3
-- vida       - 100
-- pixelsVida - 28
-- pixelsVida vai ser ate qual indice a lista vai ser preenchida com ▓▓, e o resto vai ser com ░░


getCharacterSprite:: String -> String
getCharacterSprite "mainCharacter" = unlines [
  "░░░░░░░░░░░░░░░░░░░░▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓░░░░░░",
  "░░░░░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░",
  "░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░",
  "░░░░░░░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░",
  "░░░░░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░░░░░",
  "░░░░░░░░░░▓▓░░░░▓▓░░░░░░░░▓▓▓▓░░██░░░░░░░░",
  "░░░░░░░░░░▓▓░░░░▓▓░░▒▒▒▒▒▒░░░░▒▒██░░░░░░░░",
  "░░░░░░░░░░██░░░░░░▒▒▒▒████░░██▒▒██░░░░░░░░",
  "░░░░░░░░░░░░██░░░░▒▒▒▒████░░██▒▒██░░░░░░░░",
  "░░░░░░░░░░████░░░░░░▒▒▒▒▒▒░░▒▒▒▒██░░░░░░░░",
  "░░░░░░████░░░░██░░░░████████░░██████░░░░░░",
  "░░░░██░░░░░░░░░░██░░░░░░░░░░██░░░░░░██░░░░",
  "░░░░██░░░░░░░░░░░░██████████░░░░░░░░██░░░░",
  "░░██░░░░░░░░██░░░░░░░░░░░░░░██░░░░░░░░██░░",
  "░░██░░░░██████░░░░░░░░░░░░░░██████░░░░██░░",
  "░░██░░░░░░████░░░░░░░░░░░░░░████░░░░░░██░░",
  "░░██░░░░░░████░░░░░░░░░░░░░░████░░░░░░██░░",
  "░░░░██████░░██░░░░░░░░░░░░░░██░░██████░░░░",
  "░░░░░░░░░░██░░░░░░░░░░░░░░░░░░██░░░░░░░░░░",
  "░░░░░░░░██░░░░░░░░░░██░░░░░░░░░░██░░░░░░░░",
  "░░░░░░████░░░░░░░░██░░██░░░░░░░░████░░░░░░",
  "░░████░░░░░░░░░░██░░░░░░██░░░░░░░░░░████░░",
  "██░░░░░░░░░░░░░░██░░░░░░██░░░░░░░░░░░░░░██",
  "██████████████████░░░░░░██████████████████"
  ]

getCharacterSprite "edaBoss" = unlines [
  "░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░",
  "░░░░░░░░░░░░██████████████░░░░░░░░░░░░░░░░",
  "░░░░░░░░░░██████████████████░░░░░░░░░░░░░░",
  "░░░░░░░░██████████████████████░░░░░░░░░░░░",
  "░░░░░░░░██████████████████████░░░░░░░░░░░░",
  "░░░░░░░░██░░░░░░░░░░░░░░░░██████░░░░░░░░░░",
  "░░░░░░░░██▓▓▓▓░░▓▓▓▓▓▓░░░░░░████░░░░░░░░░░",
  "░░░░░░░░██▓▓██▓▓████▓▓▓▓▓▓▓▓████░░░░░░░░░░",
  "░░░░░░░░██▓▓██▓▓████▓▓░░░░░░▓▓░░░░░░░░░░░░",
  "░░░░░░░░██▓▓▓▓░░▓▓▓▓▓▓░░░░░░████░░░░░░░░░░",
  "░░░░░░██████░░████████░░░░██░░░░████░░░░░░",
  "░░░░██░░░░░░██░░░░░░░░░░██░░░░░░░░░░██░░░░",
  "░░░░██░░░░░░░░██████████░░░░░░░░░░░░██░░░░",
  "░░██░░░░░░░░██░░░░░░░░░░░░░░██░░░░░░░░██░░",
  "░░██░░░░██████░░░░░░░░░░░░░░██████░░░░██░░",
  "░░██░░░░░░████░░░░░░░░░░░░░░████░░░░░░██░░",
  "░░██░░░░░░████░░░░░░░░░░░░░░████░░░░░░██░░",
  "░░░░██████░░██░░░░░░░░░░░░░░██░░██████░░░░",
  "░░░░░░░░░░██░░░░░░░░░░░░░░░░░░██░░░░░░░░░░",
  "░░░░░░░░██░░░░░░░░░░██░░░░░░░░░░██░░░░░░░░",
  "░░░░░░████░░░░░░░░██░░██░░░░░░░░████░░░░░░",
  "░░████░░░░░░░░░░██░░░░░░██░░░░░░░░░░████░░",
  "██░░░░░░░░░░░░░░██░░░░░░██░░░░░░░░░░░░░░██",
  "██████████████████░░░░░░██████████████████"
  ]

getCardSprite:: Int -> String
getCardSprite 2 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 3 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 4 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 5 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 6 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 7 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 8 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 9 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 10 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 11 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 12 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]
getCardSprite 13 = unlines [
  "░░one█████████░░",
  "██░░░░░░░░░░░░██",
  "██░█▀▀█░░█▀▀█░██",
  "██░█▄▄█░░█▄▄█░██",
  "██░▄▄▄█░░▄▄▄█░██",
  "██░░░░░░░░░░░░██",
  "██░░░░░░░░░░░░██",
  "░░████████████░░"
  ]

getCharSprite:: Char -> String
getCharSprite 'a' = unlines [
  "█▀▀█",
  "█■■█",
  "█  █"
  ]
getCharSprite 'b' = unlines [
  "█▀▀▄",
  "█■■█",
  "█▄▄▀"
  ]
getCharSprite 'c' = unlines [
  "█▀▀█",
  "█   ",
  "█▄▄█"
  ]
getCharSprite 'd' = unlines [
  "█▀▀▄",
  "█  █",
  "█▄▄▀"
  ]

getCharSprite 'e' = unlines [
  "█▀▀▀",
  "█■■■",
  "█▄▄▄"
  ]

getCharSprite 'f' = unlines [
  "█▀▀▀",
  "█■■■",
  "█   "
  ]
getCharSprite 'g' = unlines [
  "█▀▀▀",
  "█ ▀█",
  "█▄▄█"
  ]
getCharSprite 'h' = unlines [
  "█  █",
  "█■■█",
  "█  █"
  ]
getCharSprite 'i' = unlines [
  " ▐▌ ",
  " ▐▌ ",
  " ▐▌ "
  ]
getCharSprite 'j' = unlines [
  "   █",
  "   █",
  "█▄▄█"
  ]
getCharSprite 'k' = unlines [
  "█ ▄▀",
  "██  ",
  "█ ▀▄"
  ]
getCharSprite 'l' = unlines [
  "█   ",
  "█   ",
  "█▄▄▄"
  ]
getCharSprite 'm' = unlines [
  "█▄▄█",
  "█▐▌█",
  "█  █"
  ]
getCharSprite 'n' = unlines [
  "█▄ █",
  "█ ▀█",
  "█  █"
  ]
getCharSprite 'o' = unlines [
  "█▀▀█",
  "█  █",
  "█▄▄█"
  ]
getCharSprite 'p' = unlines [
  "█▀▀█",
  "█▄▄█",
  "█   "
  ]
getCharSprite 'q' = unlines [
  "█▀▀█",
  "█▄▄█",
  "   █"
  ]
getCharSprite 'r' = unlines [
  "█▀▀█",
  "█▄▄▀",
  "█ ▀▄"
  ]
getCharSprite 's' = unlines [
  "▄▀▀▀",
  " ▀▀▄",
  "▄▄▄▀"
  ]
getCharSprite 't' = unlines [
  "▀▐▌▀",
  " ▐▌ ",
  " ▐▌ "
  ]
getCharSprite 'u' = unlines [
  "█  █",
  "█  █",
  "█▄▄█"
  ]
getCharSprite 'v' = unlines [
  "█  █",
  "█  █",
  "▀▄▄▀"
  ]
getCharSprite 'w' = unlines [
  "█  █",
  "█▐▌█",
  "█▀▀█"
  ]
getCharSprite 'x' = unlines [
  "▀▄▄▀",
  " ▐▌ ",
  "▄▀▀▄"
  ]
getCharSprite 'y' = unlines [
  "▀▄ █",
  "  ▀█",
  "   █"
  ]
getCharSprite 'z' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '0' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '1' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '2' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '3' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '4' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '5' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '6' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '7' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '8' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite '9' = unlines [
  "▀▀▀█",
  " ▄▀ ",
  "█▄▄▄"
  ]

getCharSprite ' ' = unlines [
  "    ",
  "    ",
  "    "
  ]

getCharSprite '#' = unlines [
  "░░░░",
  "░░░░",
  "░░░░"
  ]

getCharSprite char = unlines [
  "░░░░",
  "░░░░",
  "░░░░"
  ]


makeTextLines:: [Char] -> String -> [String]
makeTextLines dataList spacer =
    let sprites = map (\char -> getCharSprite char) dataList
    in (concatLines (map (\sprite -> lines sprite) sprites) 0 spacer)

concatLines:: [[String]] -> Int -> String -> [String]
concatLines sprites lineNumber spacer
  | lineNumber < length (sprites !! 0) = [concatLine sprites lineNumber spacer] ++ concatLines sprites (lineNumber+1) spacer
  | otherwise = []

concatLine:: [[String]] -> Int -> String -> String
concatLine (h: []) lineNumber spacer = h !! lineNumber
concatLine (h: t) lineNumber spacer = h !! lineNumber ++ spacer ++ concatLine t lineNumber spacer
